"""Add can_tag for UserOrm

Revision ID: 23665d24b17f
Revises: b9d825d7f6bf
Create Date: 2025-08-10 16:20:21.135744

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '23665d24b17f'
down_revision: Union[str, None] = 'b9d825d7f6bf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_work_activity_group_user_id', table_name='work_activity')
    op.drop_table('work_activity')
    op.add_column('group_user',
                  sa.Column(
                      'can_tag', sa.Boolean(), nullable=False, server_default=str(True))
                  )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('group_user', 'can_tag')
    op.create_table('work_activity',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('profession_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('group_user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('income', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_user_id'], ['group_user.id'], name='work_activity_group_user_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['profession_id'], ['profession.id'], name='work_activity_profession_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='work_activity_pkey')
    )
    op.create_index('ix_work_activity_group_user_id', 'work_activity', ['group_user_id'], unique=False)
    # ### end Alembic commands ###
